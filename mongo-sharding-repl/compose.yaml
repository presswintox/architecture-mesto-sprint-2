x-mongo-template: &mongo-template
  image: dh-mirror.gitverse.ru/mongo:latest
  restart: always

services:
  configSrv:
    <<: *mongo-template
    container_name: mongo-sharding-repl-configSrv
    ports:
      - "27017:27017"
    networks:
      app-network:
        ipv4_address: 173.17.0.10
    volumes:
      - mongo_config_data:/data/db
    command:
      [
        "--configsvr",
        "--replSet",
        "config_server",
        "--bind_ip_all",
        "--port",
        "27017"
      ]
    healthcheck:
      test: ["CMD","mongosh","--eval","db.adminCommand('ping')"]
      interval: 5s
      start_period: 10s

  shard1:
    <<: *mongo-template
    container_name: mongo-sharding-repl-shard1
    ports:
      - "27018:27018"
    networks:
      app-network:
        ipv4_address: 173.17.1.0
    volumes:
      - shard1_data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard1",
        "--bind_ip_all",
        "--port",
        "27018"
      ]
    healthcheck:
      test: ["CMD","mongosh","--port", "27018", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      start_period: 10s

  shard1-repl01:
    <<: *mongo-template
    container_name: mongo-sharding-repl-shard1-repl01
    ports:
      - "27019:27019"
    networks:
      app-network:
        ipv4_address: 173.17.1.1
    volumes:
      - shard1_repl01_data:/data/db
    command:
      [
        "--replSet",
        "shard1",
        "--bind_ip_all",
        "--port",
        "27019"
      ]
    healthcheck:
      test: ["CMD","mongosh","--port", "27019", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      start_period: 10s
  shard1-repl02:
    <<: *mongo-template
    container_name: mongo-sharding-repl-shard1-repl02
    ports:
      - "27020:27020"
    networks:
      app-network:
        ipv4_address: 173.17.1.2
    volumes:
      - shard1_repl02_data:/data/db
    command:
      [
        "--replSet",
        "shard1",
        "--bind_ip_all",
        "--port",
        "27020"
      ]
    healthcheck:
      test: ["CMD","mongosh","--port", "27020", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      start_period: 10s

  shard2:
    <<: *mongo-template
    container_name: mongo-sharding-repl-shard2
    ports:
      - "27021:27021"
    networks:
      app-network:
        ipv4_address: 173.17.2.0
    volumes:
      - shard2_data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard2",
        "--bind_ip_all",
        "--port",
        "27021"
      ]
    healthcheck:
      test: ["CMD","mongosh","--port", "27021", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      start_period: 10s
  shard2-repl01:
    <<: *mongo-template
    container_name: mongo-sharding-repl-shard2-repl01
    ports:
      - "27022:27022"
    networks:
      app-network:
        ipv4_address: 173.17.2.1
    volumes:
      - shard2_repl01_data:/data/db
    command:
      [
        "--replSet",
        "shard2",
        "--bind_ip_all",
        "--port",
        "27022"
      ]
    healthcheck:
      test: ["CMD","mongosh","--port", "27022", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      start_period: 10s
  shard2-repl02:
    <<: *mongo-template
    container_name: mongo-sharding-repl-shard2-repl02
    ports:
      - "27023:27023"
    networks:
      app-network:
        ipv4_address: 173.17.2.2
    volumes:
      - shard2_repl02_data:/data/db
    command:
      [
        "--replSet",
        "shard2",
        "--bind_ip_all",
        "--port",
        "27023"
      ]
    healthcheck:
      test: ["CMD","mongosh","--port", "27023", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      start_period: 10s

  mongos_router:
    <<: *mongo-template
    container_name: mongo-sharding-repl-mongos_router
    ports:
      - "27024:27024"
    networks:
      app-network:
        ipv4_address: 173.17.0.7
    command:
      [
        "mongos",
        "--configdb",
        "config_server/configSrv:27017",
        "--bind_ip_all",
        "--port",
        "27024"
      ]
    healthcheck:
      test: ["CMD","mongosh","--port", "27024", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      start_period: 10s


  pymongo_api:
    container_name: mongo-sharding-repl-pymongo_api
    build: 
      context: api_app
      dockerfile: Dockerfile
    image: kazhem/pymongo_api:1.0.0
    depends_on:
      - mongos_router
    networks:
      app-network:
    ports:
      - 8080:8080
    environment:
      MONGODB_URL: "mongodb://mongo-sharding-repl-mongos_router:27024"
      MONGODB_DATABASE_NAME: "somedb"
    


networks:
  app-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 173.17.0.0/16

volumes:
  mongo_config_data:
  shard1_data:
  shard1_repl01_data:
  shard1_repl02_data:
  shard2_data:
  shard2_repl01_data:
  shard2_repl02_data:


