services:
 
  configSrv:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: mongo-sharding-configSrv
    restart: always
    ports:
      - "27017:27017"
    networks:
      app-network:
        ipv4_address: 173.17.0.10
    volumes:
      - mongo_config_data:/data/db
    command:
      [
        "--configsvr",
        "--replSet",
        "config_server",
        "--bind_ip_all",
        "--port",
        "27017"
      ]
    healthcheck:
      test: ["CMD","mongo","--eval","db.adminCommand('ping')"]
      interval: 5s
      start_period: 10s
  shard1:
    container_name: mongo-sharding-shard1
    image: dh-mirror.gitverse.ru/mongo:latest
    restart: always
    ports:
      - "27018:27018"
    networks:
      app-network:
        ipv4_address: 173.17.0.9
    volumes:
      - shard1_data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard1",
        "--bind_ip_all",
        "--port",
        "27018"
      ]
    healthcheck:
      test: ["CMD","mongo","--eval","db.adminCommand('ping')"]
      interval: 5s
      start_period: 10s
  shard2:
    container_name: mongo-sharding-shard2
    image: dh-mirror.gitverse.ru/mongo:latest
    restart: always
    ports:
      - "27019:27019"
    networks:
      app-network:
        ipv4_address: 173.17.0.8
    volumes:
      - shard2_data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard2",
        "--bind_ip_all",
        "--port",
        "27019"
      ]
    healthcheck:
      test: ["CMD","mongo","--eval","db.adminCommand('ping')"]
      interval: 5s
      start_period: 10s
  mongos_router:
    container_name: mongo-sharding-mongos_router
    image: dh-mirror.gitverse.ru/mongo:latest
    restart: always
    # depends_on:
    #   - configSrv
    #   - shard1
    #   - shard2
    ports:
      - "27020:27020"
    networks:
      app-network:
        ipv4_address: 173.17.0.7
    command:
      [
        "mongos",
        "--configdb",
        "config_server/configSrv:27017",
        "--bind_ip_all",
        "--port",
        "27020"
      ]
    healthcheck:
      test: ["CMD","mongo","--eval","db.adminCommand('ping')"]
      interval: 5s
      start_period: 10s


  pymongo_api:
    container_name: mongo-sharding-pymongo_api
    build: 
      context: api_app
      dockerfile: Dockerfile
    image: kazhem/pymongo_api:1.0.0
    depends_on:
      - mongos_router
    networks:
      app-network:
    ports:
      - 8080:8080
    environment:
      MONGODB_URL: "mongodb://mongo-sharding-mongos_router:27020"
      MONGODB_DATABASE_NAME: "somedb"
    


networks:
  app-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 173.17.0.0/16

volumes:
  mongo_config_data:
  shard1_data:
  shard2_data:


